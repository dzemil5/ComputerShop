@model X.PagedList.IPagedList<ComputerShop.Models.Proizvod>
@using X.PagedList
@using X.PagedList.Mvc.Core
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ComputerShop.Models.ApplicationUser> SignInManager
@inject UserManager<ComputerShop.Models.ApplicationUser> UserManager

@{
    ViewData["Title"] = "Proizvodi";
    var searchString = ViewBag.SearchString as string;
    var euroCulture = new System.Globalization.CultureInfo("fr-FR");

    // Provera da li je korisnik admin
    bool isAdmin = SignInManager.IsSignedIn(User) && User.IsInRole("Admin");
}

<h1>@ViewData["Title"]</h1>

@if (isAdmin)
{
    <p>
        <a asp-action="Create" class="btn btn-primary">Dodaj novi proizvod</a>
    </p>
}

<form method="get">
    <div class="form-group">
        <label for="searchString">Pretraga:</label>
        <input type="text" name="searchString" value="@searchString" class="form-control" style="max-width:300px; display:inline-block;" />
        <button type="submit" class="btn btn-secondary">Trazi</button>
    </div>
</form>

<table class="table table-bordered table-striped mt-3">
    <thead class="thead-dark">
        <tr>
            <th>Naziv</th>
            <th>Opis</th>
            <th>Cena</th>
            <th>Kolicina</th>
            <th>Slika</th>
            <th>Akcije</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Count > 0)
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@item.Naziv</td>
                    <td>@item.Opis</td>
                    <td>@string.Format(euroCulture, "{0:C}", item.Cena)</td>
                    <td>@item.Kolicina</td>
                    <td>@item.SlikaPath</td>
                    <td>
                        @* Dugmad Edit, Delete i Detalji samo za admina *@
                        @if (isAdmin)
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Izmeni</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Obrisi</a>
                        }
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Detalji</a>

                        @* Dugme Dodaj u korpu za sve ulogovane korisnike *@
                        @if (SignInManager.IsSignedIn(User))
                        {
                            <form asp-controller="Korpa" asp-action="Dodaj" method="post" style="display:inline-block; margin-left:5px;">
                                <input type="hidden" name="proizvodId" value="@item.Id" />
                                <input type="hidden" name="kolicina" value="1" />
                                <button type="submit" class="btn btn-sm btn-success">Dodaj u korpu</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">Nema proizvoda za prikaz.</td>
            </tr>
        }
    </tbody>
</table>

@if (Model != null && Model.PageCount > 1)
{
    <div class="text-center">
        @Html.PagedListPager(
        Model,
        page => Url.Action("Index", new { page, searchString }),
        new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always,
            DisplayLinkToLastPage = PagedListDisplayMode.Always,
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
            DisplayLinkToNextPage = PagedListDisplayMode.Always,
            DisplayLinkToIndividualPages = true,
            MaximumPageNumbersToDisplay = 5,
            UlElementClasses = new[] { "pagination" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" }
        }
        )
</div>
}
